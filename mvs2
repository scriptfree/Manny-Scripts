--Murderers VS Sheriffs

local Library = loadstring(game:HttpGet("https://pastebin.com/raw/GdN5iRbt"))() 
local Window = Library.CreateLib("MVS - Xub's Scripts", "DarkTheme") 
local Tab1 = Window:NewTab("Murderers")
local Tab1Section = Tab1:NewSection("Main")


local function autoEquipKnife()
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local backpack = localPlayer.Backpack

    local knife = character:FindFirstChild("Knife") or backpack:FindFirstChild("Knife")

    if knife and knife:IsA("Tool") then
        character.Humanoid:EquipTool(knife)
    end
end



local function moveToPlayerBehind(targetPlayer)
    local localCharacter = game.Players.LocalPlayer.Character
    local targetCharacter = targetPlayer.Character
    if localCharacter and targetCharacter then
        local localRootPart = localCharacter:FindFirstChild("HumanoidRootPart")
        local targetRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
        if localRootPart and targetRootPart then
            local offset = targetRootPart.CFrame.LookVector * -3
            localRootPart.CFrame = targetRootPart.CFrame + offset
        end
    end
end

local function hasForceField(character)
    return character:FindFirstChildOfClass("ForceField") ~= nil
end

local function updateSheriffPlayers(sheriffPlayers)
    local currentSheriffs = {}

    for , player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player.Team and player.Team.Name == "Sheriffs" then
            local targetCharacter = player.Character
            if targetCharacter and not hasForceField(targetCharacter) then
                table.insert(currentSheriffs, player)
            end
        end
    end

    -- Update the sheriffPlayers list
    for , player in ipairs(sheriffPlayers) do
        local index = table.find(currentSheriffs, player)
        if not index then
            -- Remove players who are no longer in the Sheriffs team
            table.remove(sheriffPlayers, table.find(sheriffPlayers, player))
        end
    end

    -- Add new sheriff players
    for _, player in ipairs(currentSheriffs) do
        if not table.find(sheriffPlayers, player) then
            table.insert(sheriffPlayers, player)
        end
    end
end

local sheriffPlayers = {}

Tab1Section:NewButton("Delete Spawn Warning", "Deletes the spawn warning", function()
        game:GetService("Players").LocalPlayer.SpawnWarning:Destroy()
end)

Tab1Section:NewToggle("Teleport to all sheriffs", "teleports you to every sheriff", function(t)
getgenv().FLO = t
while getgenv().FLO and wait(0.05) do


updateSheriffPlayers(sheriffPlayers)

-- Connect to PlayerAdded and CharacterAdded events to update the list dynamically
game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        updateSheriffPlayers(sheriffPlayers)
    end)
end)

-- Run the update function initially to populate the list
updateSheriffPlayers(sheriffPlayers)

-- Check if there are any sheriff players available for teleportation
local function checkAndTeleport()
    if #sheriffPlayers > 0 then
        local randomPlayer = sheriffPlayers[math.random(1, #sheriffPlayers)]
        moveToPlayerBehind(randomPlayer)
    end
end

-- Call the function to teleport initially
checkAndTeleport()


end
end)

Tab1Section:NewToggle("Autoequip knife", "automatically equips your knife", function(t)
getgenv().FLO = t
while getgenv().FLO and wait(1) do


autoEquipKnife()


end
end)


Tab1Section:NewToggle("Anti Spawn Protection", "removes any damage taken from enemy spawn", function(t)
getgenv().FLO = t
while getgenv().FLO and wait(0.01) do


game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SpawnProtection"):Destroy()


end
end) 
